<!DOCTYPE html>
<html>
    <head>
<!--include subhead.txt -->
        <title>
            Deployment/Configuration Tools Comparison!!
        </title>
        <!--include googleAnalyticsScript.txt -->
    </head>

    <body>
        <div class="wrapper">
<!--include navbar.txt -->
            <div id="content">
                <h1>
                    Deployment/Configuration Tools Comparison
                </h1>

                <p>
                    Here are some of the major deployment/configuration
                    tools and their features:
                </p>

                <details>
                    <summary class="sum2">
                      Puppet
                    </summary>
                    <h5>Pros:</h5>
                    <ul class="contents">
                        <li>Easy installation
                        </li>
                        <li>Supports all majors operating systems
                        </li>
                        <li>GUI is user friendly</li>
                        <li>Stable and mature solution</li>
                    </ul>
                    <h5>Cons:</h5>
                    <ul class="contents">
                        <li>Built with Ruby, unlike other tools that are Python-based
                        </li>
                        <li>New users must learn Puppet DSL
                        </li>
                        <li>Remote execution is challenging</li>
                    </ul>

                    <p>
                    <a href="https://gcallah.github.io/DevOps/deployment/puppet.html"> More on puppet </a>
                    </p>
                </details>
                <details>
                    <summary class="sum2">
                      Chef
                    </summary>
                    <h5>Pros:</h5>
                    <ul class="contents">
                        <li>Meant to be used by programmers
                        </li>
                        <li>Useful for large-scale development
                        </li>
                        <li>Stable and mature solution</li>
                        <li>Good version control capabilities</li>
                    </ul>
                    <h5>Cons:</h5>
                    <ul class="contents">
                        <li>Complicated tool to use
                        </li>
                        <li>Familiarity with Ruby is required
                        </li>
                        <li>Documentation can be overwhelming</li>
                    </ul>
                    <p>
                    <a href="https://gcallah.github.io/DevOps/deployment/chef.html"> More on Chef </a>
                    </p>
                </details>
                <details>
                    <summary class="sum2">
                      Ansible
                    </summary>
                    <h5>Pros:</h5>
                    <ul class="contents">
                        <li>Easy and fast deployment
                        </li>
                        <li>Secure SSH connection
                        </li>
                        <li>Meant for environments that can scale rapidly</li>
                        <li>Push and pull models are supported</li>
                    </ul>
                    <h5>Cons:</h5>
                    <ul class="contents">
                        <li>Basic support for Windows
                        </li>
                        <li>GUI is not very interactive
                        </li>
                        <li>Difficult to locate syntax errors with YAML</li>
                    </ul>
                    <p>
                    <a href="https://gcallah.github.io/DevOps/deployment/ansible.html"> More on Ansible </a>
                    </p>
                </details>
                <details>
                    <summary class="sum2">
                      SaltStack
                   </summary>
                    <h5>Pros:</h5>
                    <ul class="contents">
                        <li>Implemented in python and controlled with YAML files
                        which are simple to understand
                        </li>
                        <li>Fast communication between master and client
                        </li>
                        <li>Provides high scalability and resiliency
                        </li>
                        <li>Vibrant support community
                        </li>
                    </ul>
                    <h5>Cons:</h5>
                    <ul class="contents">
                        <li>Difficult to set up
                        </li>
                        <li>Salt GUI is under development
                        </li>
                        <li>Does not support variety of Operating Systems
                        </li>
                    </ul>
                </details>
                <details>
                    <summary class="sum2">
                      Docker: Containers
                    </summary>
                    <h5>Pros:</h5>
                    <ul class="contents">
                        <li>Biggest advantage: Containers use less resources</li>
                        <li>Well documented</li>
                        <li>Fast</li>
                        <li>Consumes less space compared to VMs</li>
                    </ul>
                    <h5>Cons:</h5>
                    <ul class="contents">
                        <li>Security</li>
                        <li>Platform dependent</li>
                        <li>Storage is complicated</li>
                    </ul>
                </details>
                <details>
                    <summary class="sum2">
                      Docker Swarm: Cluster Management
                    </summary>
                    <h5>Pros:</h5>
                    <ul class="contents">
                        <li>Easy Installation and Use</li>
                        <li>Native feature to docker hence possess faster
                          operation with docker containers</li>
                    </ul>
                    <h5>Cons:</h5>
                    <ul class="contents">
                        <li>No native monitoring or logging tools,
                          only 3rd party tool available to suffice
                          such operations</li>
                        <li>Provision for only manual scaling</li>
                        <li>Less capable for failures, recovery and such
                          functionality</li>
                    </ul>
                </details>
                <details>
                    <summary class="sum2">
                      Kubernetes: Cluster Management
                    </summary>
                    <h5>Pros:</h5>
                    <ul class="contents">
                        <li> Tool built with logging and monitoring capabilities</li>
                        <li> Open-source, scalable and powerful</li>
                        <li>Stable and complete solution in the market, success stories
                        : Google, Pokemon GO</li>
                        <li>Auto-scaling and Failure handling with CPU utilization</li>
                    </ul>
                    <h5>Cons:</h5>
                    <ul class="contents">
                        <li>Not easy to use - a more complicated setup and
                           configuration</li>
                    </ul>
                </details>
                <details>
                <summary class="sum2">
                    Sources
                </summary>
                <ul>
                <li><a href="https://www.upguard.com/articles/ansible-puppet">
                Puppet pros and cons
                </a>
                </li>
                <li><a href="https://www.upguard.com/articles/ansible-puppet">
                Ansible pros and cons
                </a>
                </li>
                <li><a href="https://blog.takipi.com/deployment-management-tools-chef-vs-puppet-vs-ansible-vs-saltstack-vs-fabric/">
                Chef, Puppet, Ansible comparison - 1
                </a>
                </li>
                <li><a href="https://www.intigua.com/blog/puppet-vs.-chef-vs.-ansible-vs.-saltstack">
                Chef, Puppet, Ansible comparison - 2
                </a>
                </li>
                <li><a href="https://www.upguard.com/articles/puppet-vs-salt">
                Puppet vs Salt
                </a>
                </li>
                <li><a href="https://www.mirantis.com/blog/introduction-to-salt-and-saltstack/">
                Intoduction to Saltstack
                </a>
                </li>
                <li><a href="https://dzone.com/articles/docker-vs-kubernetes-prons-and-cons">
                docker vs kubernetes</a>
                </li>
                <li><a href="https://kubernetes.io">
                kubernetes.io </a>
                </li>
                <li><a href="https://docs.docker.com/engine/swarm/">
                Docker Swarm </a>
                </li>
                <li><a href="https://searchitoperations.techtarget.com/definition/Docker-Swarm">
                Docker Swarm overview</a>
                </li>
                <li><a href="https://www.upcloud.com/blog/docker-swarm-vs-kubernetes/">
                Swarm vs Kubernetes</a>
                </li>
                <li><a href="https://platform9.com/blog/kubernetes-docker-swarm-compared/">
                Swarm vs Kubernetes2</a>
                </li>
                <li><a href="https://www.zdnet.com/article/kubernetes-graduates-to-full-pledged-open-source-program/">
                  kubernetes examples</a>
                </li>
                </ul>
                </details>
            </div>
        </div>

    </body>
</html>
