<!DOCTYPE html>
<html>
    <head>
<!--include subhead.txt -->
        <title>
            Deployment Theory
        </title>
        <!--include googleAnalyticsScript.txt -->
    </head>

    <body>
        <div class="wrapper">
<!--include navbar.txt -->
            <div id="content">
        <h1>
            Deployment Theory
        </h1>
                <p>
                Deployment pipeline is an integral part of Devops toolchain, 
                enabling best practices like continuous integration and 
                continuous delivery.
                <ul class="nested">
                <li>Continuous integration is a practice to continuously 
                integrate and build the code.</li>
                <li>Continuous delivery means building the code, deploying to 
                another environment and testing the code to make it ready for 
                deploying to the production environment.</li>
                </ul>
                </p>
                <p>
                Automation is a crucial aspect of Deployment pipeline and can 
                be achieved using Jenkins pipeline and tools like puppet, 
                chef or ansible which can turn infrastructure into code. To 
                quote Paul Venezia: “Puppet, Chef, Ansible, and Salt were all
                built with that very goal in mind: to make it much easier to 
                configure and maintain dozens, hundreds, or even thousands of 
                servers.”
                </p>

                <h4 class="deployment">
                    Infrastructure as code
                </h4>

                <blockquote>
                "The enabling idea of Infrastructure as Code is that the
                systems and devices used to run software can be treated as
                if they, themselves, are software." -- Kief Morris
                </blockquote>

                <p>
                Infrastructure as code (IaC) is a mechanism to make the 
                infrastructure reliable, repeatable and fast by writing code 
                for configuring environments and automating the provisioning 
                of infrastructure.
                </p>

                <h4 class="deployment">
                    Goals
                </h4>

                <ol class="nested">
                    <li>Infrastructure should never be resistant to changes, 
                    which should be made in a regular and automated fashion.
                    </li>
                    <li>Repetitive tasks should done via automation.</li>
                    <li>Spinning up new environments should be self service.
                    </li>
                    <li>Focus should be on failure recovery rather than 
                    failure avoidance.
                    </li>
                </ol>

                <h4 class="deployment">
                    Benefits
                </h4>

                <ol class="nested">
                <li> It helps delivering stable environments rapidly and 
                scalably.
                </li>
                <li> Since the desired state of the environment is 
                represented by code, no manual configuration is required.
                </li>
                <li> As opposed to manual provisioning, which are harder to 
                debug because of different configurations and imprecise 
                instructions, IaC makes servers more consistent, as their 
                configuration is defined using code.
                </li>
                </ol>

                <h4 class="deployment">
                    Principles
                </h4>
                <p>
                As described in detail in the book "Infrastructure as Code" 
                by Kief Morris, following are the principles of IaC.
                </p>
                <ol class="nested">
                <li> <b>Reproducibility</b>: One should be able to build or 
                rebuild any part of the infrastructure.
                </li>
                <li> <b>Consistency</b>: All servers should run the same 
                version of software and configurations.
                </li>
                <li> <b>Disposability</b>: It should be possible to destroy
                servers for cases like hardware failures, reducing capacity, 
                replacing servers etc.
                </li>
                <li> <b>Service Continuity</b>: Even if infrastructure pieces 
                fail, service should be able to handle user requests. Having 
                backup servers are required to prevent interruption of 
                service in case a server goes down.
                </li>
                <li> <b>Self-testing systems</b>: Automated testing is one of 
                the key practices that enables fast feedback to developers in 
                order to assess whether their changes would work correctly 
                without causing any breakages.
                </li>
                <li> <b>Self-documenting systems</b>: With IaC, the 
                documentation is implicit in the scripts and tools carrying 
                out the process.
                </li>
                <li> <b>Versioning infrastructure code</b>: Just like in 
                application code, version control helps in keeping track of 
                changes to infrastructure code and rolling them back if 
                required.
                </li>
                </ol>
                <details>
                <summary class="sum2">
                        Sources
                </summary>
                <ul class="contents">
                     <li><a href="https://www.visualstudio.com/learn/what-is-infrastructure-as-code/">What is Infrastructure as Code?
                     </a>
                     </li>
                     <li><a href="https://www.networkworld.com/article/2172097/virtualization/puppet-vs--chef-vs--ansible-vs--salt.html">
                     Deployment tools
                     </a>
                     </li>
                     <li><a href="http://shop.oreilly.com/product/0636920039297.do">
                     Infrastructure as Code by Kief Morris
                     </a>
                     </li>
                     <li><a href="https://martinfowler.com/bliki/InfrastructureAsCode.html"> Infrastructure as Code by 
                     Martin Fowler </a>
                     </li>
                </ul>
                </details>
            </div>
        </div>
    </body>
</html>
